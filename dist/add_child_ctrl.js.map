{"version":3,"sources":["../src/add_child_ctrl.js"],"names":["addChild","node","allData","panelCtrl","data","prepareModalData","utils","showModal","removeListeners","addListeners","sub","self","placeholder","maxLength","type","filter","d","category_id","reduce","arr","record","push","name","info","category","reason_id","parent_reason_id","Array","from","Set","child","$","document","on","input","serializeArray","value","alert","isInputAvailable","insertNode","off","toLowerCase","indexOf","isInputValid","line","writeInsertionLine","url","postgRestHost","post","then","trigger","refresh","catch","reason","reasons","getReasons","angular"],"mappings":"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","file":"add_child_ctrl.js","sourcesContent":["import * as utils from './utils'\nimport angular from 'angular'\n\nlet filter = []\n\nexport function addChild(node, allData, panelCtrl){\n\n  let data = prepareModalData(node, allData)\n  utils.showModal('add_child.html', data)\n  removeListeners()\n  addListeners(node, allData, panelCtrl)\n\n}\n\nfunction prepareModalData(node, allData){\n\n  let sub, self\n  let placeholder\n  let maxLength = 50\n\n  if (node.type === 'Root') {\n    sub = 'Category'\n    self = 'Root'\n    placeholder = 'Enter a Category here'\n    filter = allData.filter(d => d.category_id !== null)\n    filter = filter.reduce((arr, record) => {\n      arr.push(record.category_id)\n      return arr\n    }, [])\n  }else if (node.type === 'Category') {\n    sub = 'Reason'\n    self = 'Category called ' + node.name\n    placeholder = 'Enter a Reason here'\n    filter = allData.filter(d => d.category_id !== null && d.category_id === node.info.category && d.reason_id !== null && d.parent_reason_id === null)\n    filter = filter.reduce((arr, record) => {\n      arr.push(record.reason_id)\n      return arr\n    }, [])\n  }else if (node.type === 'Parent Reason' || node.type === 'Reason') {\n    sub = 'Sub-Reason'\n    self = 'Reason called ' + node.name\n    placeholder = 'Enter a Reason here'\n    filter = allData.filter(d => d.category_id !== null && d.category_id === node.info.category && d.reason_id !== null && d.parent_reason_id === node.name)\n    filter = filter.reduce((arr, record) => {\n      arr.push(record.reason_id)\n      return arr\n    }, [])\n  }\n\n  filter = Array.from(new Set(filter))\n\n  return {\n    info: {\n      child: sub,\n      self: self\n    },\n    placeholder: placeholder,\n    maxLength: maxLength\n  }\n}\n\nfunction addListeners(node, allData, panelCtrl){\n  $(document).on('click', '#master-data-reason-code-add-child-submitBtn', e => {\n    const input = $('#master-data-reason-code-add-child-form').serializeArray()\n    if (input[0].value === '') {\n      utils.alert('warning', 'Warning', 'Input Required')\n    }else {\n      if (isInputAvailable(input[0].value)) {\n        insertNode(input[0].value, node, panelCtrl, allData)\n      }\n    }\n  })\n}\n\nfunction removeListeners(){\n  $(document).off('click', '#master-data-reason-code-add-child-submitBtn')\n}\n\n/**\n * Check if the user input has already been exist in the same parent node.\n * @param {*} input \n */\nfunction isInputAvailable(input){\n  // console.log(filter);\n  filter = filter.reduce((arr, d) => {\n    arr.push(d.toLowerCase())\n    return arr\n  }, [])\n\n  if (filter.indexOf(input.toLowerCase()) !== -1) {\n    utils.alert('warning', 'Warning', 'Child exists')\n    return false\n  }\n\n  if (input.indexOf('|') !== -1){\n    utils.alert('warning', 'Warning', 'Sensitive character \"|\" is not allowed')\n    return false\n  }\n\n  return true\n}\n\nfunction insertNode(input, node, panelCtrl, allData){\n\n\n  if (!isInputValid(input, node, allData)) {return}\n\n  const line = writeInsertionLine(input, node)\n  const url = utils.postgRestHost + 'reason_codes'\n  utils.post(url, line).then(res => {\n    // console.log(res)\n    $('#master-data-reason-code-add-child-cancelBtn').trigger('click')\n    utils.alert('success', 'Success', 'A new node has been succeesfully inserted')\n    panelCtrl.refresh()\n  }).catch(e => {\n    // console.log(e);\n    $('#master-data-reason-code-add-child-cancelBtn').trigger('click')\n    utils.alert('error', 'Error', 'Error ocurred whiling inserting node into the database, please try agian')\n  })\n}\n\nfunction writeInsertionLine(input, node){\n    let line = ''\n\n    if (node.type === 'Root') {\n      line = 'category_id=' + input\n    }else if (node.type === 'Category') {\n      line = 'category_id=' + node.info.category + '&reason_id=' + input\n    }else if (node.type === 'Parent Reason' || node.type === 'Reason') {\n      line = 'category_id=' + node.info.category + '&reason_id=' + input + '&parent_reason_id=' + node.info.reason\n    }\n\n    return line\n}\n\n/**\n * Check if the input is the same with its parent, and if adding sub-reason, check if the reason has exist -> not duplicate name should be exist in one category\n * Checking for sub-reason is beacuse the parent-reason and sub-reason is an endless parent-child relationship, -\n * for which, recursive method is used to loop thruogh each child, if a sub-reason's name is the same with any of it's parent reason's name -\n * it will cause 'call stack out of range' error.\n *  \n * @param {*} input --> This is the input\n * @param {*} node  --> This is the selected node, which will be the input's parent, because this is a 'add child' method \n * @param {*} allData --> This is all of the data of the tree, which will be used to find the all of the input's parents\n */\nfunction isInputValid (input, node, allData){\n  if (node.type !== 'Root') {\n    //get all of the reasons of that category\n    const reasons = utils.getReasons(node, allData)\n    if (reasons.indexOf(input) !== -1) {\n      //exist\n      utils.alert('warning', 'Warning', \"Same reason was found in the same category, please make sure there isn't duplicate reason in the same category\")\n      return false\n    }\n  }\n\n  if (input === node.name) {\n    utils.alert('warning', 'Warning', \"The child node's name cannot be the same as its parent's name\")\n    return false\n  }\n\n  return true\n}\n"]}